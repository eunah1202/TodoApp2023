{"version":3,"file":"static/css/main.221f415f.css","mappings":"AAAA,KAA0B,kBAAkB,CAAtC,QAAS,CAAC,SAA6B,CCA7C,KAAK,cAAe,CACpB,EAAE,cAAe,CCIjB,cAGE,iBAAiB,CADjB,gBAAgB,CAEhB,eAAc,CAHd,WAGe,CAJjB,yBAeI,kBAAiB,CANjB,kBAXqB,CAYrB,UAAU,CAGV,YAAY,CADZ,gBAAgB,CADhB,WAAW,CAGX,sBACkB,CAftB,uBAkBW,eAAe,CCvB1B,YAEE,kBAAiB,CADjB,YACkB,CAFpB,kBAII,eAAe,CAEf,WAAW,CAIX,UAAU,CAKV,SAPA,kBAAkB,CAClB,eAAe,CAJf,YAAY,CAEZ,aAQM,CAfV,6CAaM,aAAa,CAbnB,+BAaM,aAAa,CAbnB,mBA2BI,kBAAmB,CATnB,eAAe,CAGf,kBAAkB,CADlB,WAAW,CAEX,UAAU,CAMV,cAAc,CAFd,YAAY,CADZ,gBAAgB,CANhB,YAAY,CAIZ,iBAAiB,CACjB,kBAAkB,CAKlB,oCAAqC,CA7BzC,yBA+BM,kBAAkB,CC9BxB,cAGE,qBADA,YAAY,CADZ,YAEqB,CAHvB,4BAKI,kBAAkB,CALtB,wBAWI,kBAAiB,CAFjB,cAAc,CACd,YAAY,CAFZ,QAGkB,CAXtB,4BAaM,gBAAgB,CAbtB,8BAiBM,SADA,iBACM,CAjBZ,oCAsBQ,aAAa,CAtBrB,sCAyBQ,aAAa,CACb,4BAA4B,CA1BpC,sBAiCI,kBAAmB,CAEnB,aAAa,CACb,cAAa,CAJb,YAAY,CAEZ,gBAEc,CApClB,4BAuCI,4BAA4B","sources":["index.css","App.css","styles/TodoTemplate.scss","styles/TodoInsert.scss","styles/TodoListItem.scss"],"sourcesContent":["body {margin: 0;padding:0;background:#e9ecef;}\n\n","html{font-size:18px;}\np{font-size:24px;}","// TodoTemplate 컴포넌트에서 생성한 class이름 써준것 \r\n// css와 scss적는 방법에 차이가 있는데 전자는 >로 표현해준 반면 후자는 {}안에 자식들 넣어준다.\r\n\r\n$background-color:#22b8cf;\r\n\r\n.TodoTemplate{\r\n  width:512px;\r\n  margin:6rem auto;\r\n  border-radius:4px;\r\n  overflow:hidden;\r\n  \r\n  // .todoTemplate의 자식들을 그냥 안에다가 작성해준다.\r\n  .app-title{\r\n    // 자주사용하는 값들을 변수로 만들 수 있어 ex)$background-color:#22b8cf; 맨위에 써주고 쓰고 싶은 곳에 $~속성이름만 써준다\r\n    background:$background-color;\r\n    color:#fff;\r\n    height:4rem;\r\n    font-size:1.5rem;\r\n    display:flex;\r\n    justify-content:center;\r\n    align-items:center;\r\n  }\r\n\r\n  .content{background:#fff;}\r\n}\r\n",".TodoInsert{\r\n  display:flex;\r\n  background:#495057;\r\n  input{\r\n    background:none;\r\n    outline:none;\r\n    border:none;\r\n    padding:0.5rem;\r\n    font-size:1.125rem; //18px *1.125\r\n    line-height:1.5;\r\n    color:#fff;\r\n    // 기존 css에서 input::placeholder이렇게 썻던거 아래처럼 써준다 &::는 자기자신을 말함\r\n    &::placeholder{\r\n      color:#dee2e6;\r\n    }\r\n    flex:1;\r\n  }\r\n  button{\r\n    background:none;\r\n    outline:none;\r\n    border:none;\r\n    background:#868e96;\r\n    color:#fff;\r\n    padding-left:1rem; //18px\r\n    padding-right:1rem; //18px\r\n    font-size:1.5rem; //27px\r\n    display:flex;\r\n    align-items: center;\r\n    cursor:pointer;\r\n    transition:background 0.1s ease-in 0s;\r\n    &:hover{\r\n      background:#adb5bd;\r\n    }\r\n  }\r\n}","// 각각 한줄이 item이다\r\n.TodoListItem{\r\n  padding:1rem;\r\n  display:flex; //모든게 나란히 있어야하니까\r\n  align-content: center; //세로가운데\r\n  &:nth-child(even){ //짝수에 해당하는 아이템들\r\n    background:#eaf4ff;\r\n  }\r\n  .Checkbox{ //체크박스와 글자를 묶는 부분\r\n    flex:1 ;// 여기에 flex:1해주면 해당 부분은 크게되고 remove에 안해주면 remove는 걔해당크기만큼의 크기가됨\r\n    cursor:pointer;\r\n    display:flex;\r\n    align-items:center;\r\n    svg{ //기본일 경우; check안된상태\r\n      font-size:1.5rem;\r\n    }\r\n    .text{\r\n      margin-left:0.5rem;\r\n      flex:1;\r\n    }\r\n\r\n    &.checked{ // ==div.Checkbox.checked{} ==체크된상태 경우; check된상태\r\n      svg{\r\n        color:#22b8cf;\r\n      }\r\n      .text{\r\n        color:#adb5bd;\r\n        text-decoration:line-through;\r\n      }\r\n    }\r\n    \r\n  }\r\n  .remove{\r\n    display:flex; \r\n    align-items: center;\r\n    font-size:1.5rem; //이걸로 아이콘의 크기를 조절한다\r\n    color:#ff6b6b;\r\n    cursor:pointer;\r\n  }\r\n  & + &{\r\n    border-top:1px solid #0f2438;\r\n  } //모든 item에 border-top들어가야해=> &(현재아이콘에) +(가장인접해있는) &(아이콘)\r\n}"],"names":[],"sourceRoot":""}